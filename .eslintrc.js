module.exports = {
    env: {
        browser: true,
        node: true,
        jest: true,
        es6: true,
        'cypress/globals': true,
    },
    parserOptions: {
        ecmaVersion: 7,
        sourceType: 'module',
        ecmaFeatures: {
            impliedStrict: true,
            experimentalObjectRestSpread: true,
            jsx: true,
            modules: true,
        },
    },
    parser: '@babel/eslint-parser',
    rules: {
        'block-scoped-var': 2,
        'brace-style': 2,
        camelcase: [2, { properties: 'never' }],
        'comma-style': 2,
        // TODO: Bring this down to 15
        complexity: [1, { max: 25 }],
        'consistent-this': [2, 'self'],
        curly: [2, 'all'],
        'dot-notation': [2, { allowKeywords: true }],
        eqeqeq: 2,
        'guard-for-in': 2,
        'key-spacing': [2, { beforeColon: false, afterColon: true }],
        'keyword-spacing': 2,
        'no-const-assign': 2,
        'max-len': [
            2,
            120,
            4,
            {
                ignoreComments: true,
                ignoreUrls: true,
                ignoreStrings: true,
                ignoreTemplateLiterals: true,
            },
        ],
        'max-params': [1, { max: 6 }],
        'no-bitwise': 2,
        'no-caller': 2,
        'no-cond-assign': 2,
        'no-console': 2,
        'no-debugger': 2,
        'no-dupe-keys': 2,
        'no-else-return': 1,
        'no-empty': 2,
        'no-eval': 2,
        'no-iterator': 2,
        'no-loop-func': 2,
        'no-mixed-spaces-and-tabs': 2,
        'no-multi-str': 2,
        'no-new': 2,
        'no-proto': 2,
        'no-script-url': 2,
        'no-shadow': 0,
        'no-trailing-spaces': 1,
        'no-undef': 2,
        'no-unused-vars': [2, { vars: 'all', args: 'after-used' }],
        'no-use-before-define': [2, 'nofunc'],
        'no-var': 2,
        'padded-blocks': [2, 'never'],
        'prefer-const': 2,
        'space-before-blocks': 2,
        'spaced-comment': [2, 'always', { markers: ['global'] }],
        'valid-jsdoc': [2, { requireReturn: false }],
        'wrap-iife': [2, 'inside'],
        yoda: 2,
        'react/jsx-uses-react': 2,
        'react/jsx-uses-vars': 2,
        'react/jsx-key': 2,
        'react/no-danger': 2,
        'react/no-deprecated': 0,
        'react/no-direct-mutation-state': 2,
        'react/jsx-no-undef': 2,
        'prettier/prettier': [
            'error',
            {
                singleQuote: true,
                printWidth: 120,
                tabWidth: 4,
                trailingComma: 'es5',
                arrowParens: 'avoid',
            },
        ],
        'flowtype/define-flow-type': 1,
        'react-hooks/rules-of-hooks': 'error', // Checks rules of Hooks
        'react-hooks/exhaustive-deps': 'warn', // Checks effect dependencies
        '@emotion/jsx-import': 'error',
        '@emotion/no-vanilla': 'error',
        '@emotion/import-from-emotion': 'error',
        '@emotion/styled-import': 'error',
        '@emotion/pkg-renaming': 'error',
    },
    plugins: [
        'react',
        '@babel',
        'flowtype',
        'prettier',
        'cypress',
        'react-hooks',
        '@emotion',
        'jest',
    ],
    overrides: [
        {
            // 3) Now we enable eslint-plugin-testing-library rules or preset only for matching files!
            files: ['**/__tests__/**/*.[jt]s?(x)', '**/?(*.)+(test).[jt]s?(x)'],
            rules: {
                'testing-library/no-container': 'warn',
                'testing-library/no-node-access': 'warn',
            },
            extends: [
                'plugin:testing-library/react',
                'plugin:jest-dom/recommended',
                'plugin:jest/recommended',
                'plugin:jest/style',
            ],
        },
        {
            files: ['**/*.flow'],
            rules: {
                'no-unused-vars': 'off',
            },
        },
    ],
    settings: {
        react: {
            version: '16.3.2',
            flowVersion: '0.141.0',
        },
    },
};
